'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="TESIS ATLETISMO 2016")>  _
Partial Public Class BaseDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAtleta(instance As Atleta)
    End Sub
  Partial Private Sub UpdateAtleta(instance As Atleta)
    End Sub
  Partial Private Sub DeleteAtleta(instance As Atleta)
    End Sub
  Partial Private Sub InsertAtleta_X_Competencia(instance As Atleta_X_Competencia)
    End Sub
  Partial Private Sub UpdateAtleta_X_Competencia(instance As Atleta_X_Competencia)
    End Sub
  Partial Private Sub DeleteAtleta_X_Competencia(instance As Atleta_X_Competencia)
    End Sub
  Partial Private Sub InsertCategoría(instance As Categoría)
    End Sub
  Partial Private Sub UpdateCategoría(instance As Categoría)
    End Sub
  Partial Private Sub DeleteCategoría(instance As Categoría)
    End Sub
  Partial Private Sub InsertClub_Federación(instance As Club_Federación)
    End Sub
  Partial Private Sub UpdateClub_Federación(instance As Club_Federación)
    End Sub
  Partial Private Sub DeleteClub_Federación(instance As Club_Federación)
    End Sub
  Partial Private Sub InsertCompetencia(instance As Competencia)
    End Sub
  Partial Private Sub UpdateCompetencia(instance As Competencia)
    End Sub
  Partial Private Sub DeleteCompetencia(instance As Competencia)
    End Sub
  Partial Private Sub InsertEstado_Atleta(instance As Estado_Atleta)
    End Sub
  Partial Private Sub UpdateEstado_Atleta(instance As Estado_Atleta)
    End Sub
  Partial Private Sub DeleteEstado_Atleta(instance As Estado_Atleta)
    End Sub
  Partial Private Sub InsertEstado_Competencia(instance As Estado_Competencia)
    End Sub
  Partial Private Sub UpdateEstado_Competencia(instance As Estado_Competencia)
    End Sub
  Partial Private Sub DeleteEstado_Competencia(instance As Estado_Competencia)
    End Sub
  Partial Private Sub InsertJuez(instance As Juez)
    End Sub
  Partial Private Sub UpdateJuez(instance As Juez)
    End Sub
  Partial Private Sub DeleteJuez(instance As Juez)
    End Sub
  Partial Private Sub InsertJuez_X_Prueba(instance As Juez_X_Prueba)
    End Sub
  Partial Private Sub UpdateJuez_X_Prueba(instance As Juez_X_Prueba)
    End Sub
  Partial Private Sub DeleteJuez_X_Prueba(instance As Juez_X_Prueba)
    End Sub
  Partial Private Sub InsertLocalidad(instance As Localidad)
    End Sub
  Partial Private Sub UpdateLocalidad(instance As Localidad)
    End Sub
  Partial Private Sub DeleteLocalidad(instance As Localidad)
    End Sub
  Partial Private Sub InsertPerfil_Usuario(instance As Perfil_Usuario)
    End Sub
  Partial Private Sub UpdatePerfil_Usuario(instance As Perfil_Usuario)
    End Sub
  Partial Private Sub DeletePerfil_Usuario(instance As Perfil_Usuario)
    End Sub
  Partial Private Sub InsertProvincia(instance As Provincia)
    End Sub
  Partial Private Sub UpdateProvincia(instance As Provincia)
    End Sub
  Partial Private Sub DeleteProvincia(instance As Provincia)
    End Sub
  Partial Private Sub InsertPrueba(instance As Prueba)
    End Sub
  Partial Private Sub UpdatePrueba(instance As Prueba)
    End Sub
  Partial Private Sub DeletePrueba(instance As Prueba)
    End Sub
  Partial Private Sub InsertPrueba_Combinada(instance As Prueba_Combinada)
    End Sub
  Partial Private Sub UpdatePrueba_Combinada(instance As Prueba_Combinada)
    End Sub
  Partial Private Sub DeletePrueba_Combinada(instance As Prueba_Combinada)
    End Sub
  Partial Private Sub InsertPrueba_Combinada_X_Prueba(instance As Prueba_Combinada_X_Prueba)
    End Sub
  Partial Private Sub UpdatePrueba_Combinada_X_Prueba(instance As Prueba_Combinada_X_Prueba)
    End Sub
  Partial Private Sub DeletePrueba_Combinada_X_Prueba(instance As Prueba_Combinada_X_Prueba)
    End Sub
  Partial Private Sub InsertResultado_Final(instance As Resultado_Final)
    End Sub
  Partial Private Sub UpdateResultado_Final(instance As Resultado_Final)
    End Sub
  Partial Private Sub DeleteResultado_Final(instance As Resultado_Final)
    End Sub
  Partial Private Sub InsertResultado_Parcial(instance As Resultado_Parcial)
    End Sub
  Partial Private Sub UpdateResultado_Parcial(instance As Resultado_Parcial)
    End Sub
  Partial Private Sub DeleteResultado_Parcial(instance As Resultado_Parcial)
    End Sub
  Partial Private Sub InsertSexo(instance As Sexo)
    End Sub
  Partial Private Sub UpdateSexo(instance As Sexo)
    End Sub
  Partial Private Sub DeleteSexo(instance As Sexo)
    End Sub
  Partial Private Sub InsertTalle_Remera(instance As Talle_Remera)
    End Sub
  Partial Private Sub UpdateTalle_Remera(instance As Talle_Remera)
    End Sub
  Partial Private Sub DeleteTalle_Remera(instance As Talle_Remera)
    End Sub
  Partial Private Sub InsertTipo_Juez(instance As Tipo_Juez)
    End Sub
  Partial Private Sub UpdateTipo_Juez(instance As Tipo_Juez)
    End Sub
  Partial Private Sub DeleteTipo_Juez(instance As Tipo_Juez)
    End Sub
  Partial Private Sub InsertUsuario(instance As Usuario)
    End Sub
  Partial Private Sub UpdateUsuario(instance As Usuario)
    End Sub
  Partial Private Sub DeleteUsuario(instance As Usuario)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CAPA_PRESENTACION.My.MySettings.Default.TESIS_ATLETISMO_2016ConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Atleta() As System.Data.Linq.Table(Of Atleta)
		Get
			Return Me.GetTable(Of Atleta)
		End Get
	End Property
	
	Public ReadOnly Property Atleta_X_Competencia() As System.Data.Linq.Table(Of Atleta_X_Competencia)
		Get
			Return Me.GetTable(Of Atleta_X_Competencia)
		End Get
	End Property
	
	Public ReadOnly Property Categoría() As System.Data.Linq.Table(Of Categoría)
		Get
			Return Me.GetTable(Of Categoría)
		End Get
	End Property
	
	Public ReadOnly Property Club_Federación() As System.Data.Linq.Table(Of Club_Federación)
		Get
			Return Me.GetTable(Of Club_Federación)
		End Get
	End Property
	
	Public ReadOnly Property Competencia() As System.Data.Linq.Table(Of Competencia)
		Get
			Return Me.GetTable(Of Competencia)
		End Get
	End Property
	
	Public ReadOnly Property Estado_Atleta() As System.Data.Linq.Table(Of Estado_Atleta)
		Get
			Return Me.GetTable(Of Estado_Atleta)
		End Get
	End Property
	
	Public ReadOnly Property Estado_Competencia() As System.Data.Linq.Table(Of Estado_Competencia)
		Get
			Return Me.GetTable(Of Estado_Competencia)
		End Get
	End Property
	
	Public ReadOnly Property Juez() As System.Data.Linq.Table(Of Juez)
		Get
			Return Me.GetTable(Of Juez)
		End Get
	End Property
	
	Public ReadOnly Property Juez_X_Prueba() As System.Data.Linq.Table(Of Juez_X_Prueba)
		Get
			Return Me.GetTable(Of Juez_X_Prueba)
		End Get
	End Property
	
	Public ReadOnly Property Localidad() As System.Data.Linq.Table(Of Localidad)
		Get
			Return Me.GetTable(Of Localidad)
		End Get
	End Property
	
	Public ReadOnly Property Perfil_Usuario() As System.Data.Linq.Table(Of Perfil_Usuario)
		Get
			Return Me.GetTable(Of Perfil_Usuario)
		End Get
	End Property
	
	Public ReadOnly Property Provincia() As System.Data.Linq.Table(Of Provincia)
		Get
			Return Me.GetTable(Of Provincia)
		End Get
	End Property
	
	Public ReadOnly Property Prueba() As System.Data.Linq.Table(Of Prueba)
		Get
			Return Me.GetTable(Of Prueba)
		End Get
	End Property
	
	Public ReadOnly Property Prueba_Combinada() As System.Data.Linq.Table(Of Prueba_Combinada)
		Get
			Return Me.GetTable(Of Prueba_Combinada)
		End Get
	End Property
	
	Public ReadOnly Property Prueba_Combinada_X_Prueba() As System.Data.Linq.Table(Of Prueba_Combinada_X_Prueba)
		Get
			Return Me.GetTable(Of Prueba_Combinada_X_Prueba)
		End Get
	End Property
	
	Public ReadOnly Property Resultado_Final() As System.Data.Linq.Table(Of Resultado_Final)
		Get
			Return Me.GetTable(Of Resultado_Final)
		End Get
	End Property
	
	Public ReadOnly Property Resultado_Parcial() As System.Data.Linq.Table(Of Resultado_Parcial)
		Get
			Return Me.GetTable(Of Resultado_Parcial)
		End Get
	End Property
	
	Public ReadOnly Property Sexo() As System.Data.Linq.Table(Of Sexo)
		Get
			Return Me.GetTable(Of Sexo)
		End Get
	End Property
	
	Public ReadOnly Property Talle_Remera() As System.Data.Linq.Table(Of Talle_Remera)
		Get
			Return Me.GetTable(Of Talle_Remera)
		End Get
	End Property
	
	Public ReadOnly Property Tipo_Juez() As System.Data.Linq.Table(Of Tipo_Juez)
		Get
			Return Me.GetTable(Of Tipo_Juez)
		End Get
	End Property
	
	Public ReadOnly Property Usuario() As System.Data.Linq.Table(Of Usuario)
		Get
			Return Me.GetTable(Of Usuario)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Atleta")>  _
Partial Public Class Atleta
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Atleta As Integer
	
	Private _Nombre_Atleta As String
	
	Private _Apellido_Atleta As String
	
	Private _Fecha_Nacimiento As System.Nullable(Of Date)
	
	Private _Dni As String
	
	Private _Nacionalidad As String
	
	Private _Id_Provincia As System.Nullable(Of Integer)
	
	Private _Id_Localidad As System.Nullable(Of Integer)
	
	Private _Domicilio As String
	
	Private _Barrio As String
	
	Private _Teléfono_Fijo As String
	
	Private _Teléfono_Celular As String
	
	Private _E_mail As String
	
	Private _Contacto_Emergencia As String
	
	Private _Cobertura_Médica As String
	
	Private _Federado As String
	
	Private _Nro_Federado As String
	
	Private _Id_Club_Federación As System.Nullable(Of Integer)
	
	Private _Otra_Institución As String
	
	Private _Pago As String
	
	Private _Importe As System.Nullable(Of Decimal)
	
	Private _Forma_Pago As String
	
	Private _Id_Talle_Remera As System.Nullable(Of Integer)
	
	Private _Dorsal As System.Nullable(Of Integer)
	
	Private _Id_Estado_Atleta As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_AtletaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_AtletaChanged()
    End Sub
    Partial Private Sub OnNombre_AtletaChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_AtletaChanged()
    End Sub
    Partial Private Sub OnApellido_AtletaChanging(value As String)
    End Sub
    Partial Private Sub OnApellido_AtletaChanged()
    End Sub
    Partial Private Sub OnFecha_NacimientoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFecha_NacimientoChanged()
    End Sub
    Partial Private Sub OnDniChanging(value As String)
    End Sub
    Partial Private Sub OnDniChanged()
    End Sub
    Partial Private Sub OnNacionalidadChanging(value As String)
    End Sub
    Partial Private Sub OnNacionalidadChanged()
    End Sub
    Partial Private Sub OnId_ProvinciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_ProvinciaChanged()
    End Sub
    Partial Private Sub OnId_LocalidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_LocalidadChanged()
    End Sub
    Partial Private Sub OnDomicilioChanging(value As String)
    End Sub
    Partial Private Sub OnDomicilioChanged()
    End Sub
    Partial Private Sub OnBarrioChanging(value As String)
    End Sub
    Partial Private Sub OnBarrioChanged()
    End Sub
    Partial Private Sub OnTeléfono_FijoChanging(value As String)
    End Sub
    Partial Private Sub OnTeléfono_FijoChanged()
    End Sub
    Partial Private Sub OnTeléfono_CelularChanging(value As String)
    End Sub
    Partial Private Sub OnTeléfono_CelularChanged()
    End Sub
    Partial Private Sub OnE_mailChanging(value As String)
    End Sub
    Partial Private Sub OnE_mailChanged()
    End Sub
    Partial Private Sub OnContacto_EmergenciaChanging(value As String)
    End Sub
    Partial Private Sub OnContacto_EmergenciaChanged()
    End Sub
    Partial Private Sub OnCobertura_MédicaChanging(value As String)
    End Sub
    Partial Private Sub OnCobertura_MédicaChanged()
    End Sub
    Partial Private Sub OnFederadoChanging(value As String)
    End Sub
    Partial Private Sub OnFederadoChanged()
    End Sub
    Partial Private Sub OnNro_FederadoChanging(value As String)
    End Sub
    Partial Private Sub OnNro_FederadoChanged()
    End Sub
    Partial Private Sub OnId_Club_FederaciónChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_Club_FederaciónChanged()
    End Sub
    Partial Private Sub OnOtra_InstituciónChanging(value As String)
    End Sub
    Partial Private Sub OnOtra_InstituciónChanged()
    End Sub
    Partial Private Sub OnPagoChanging(value As String)
    End Sub
    Partial Private Sub OnPagoChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnForma_PagoChanging(value As String)
    End Sub
    Partial Private Sub OnForma_PagoChanged()
    End Sub
    Partial Private Sub OnId_Talle_RemeraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_Talle_RemeraChanged()
    End Sub
    Partial Private Sub OnDorsalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDorsalChanged()
    End Sub
    Partial Private Sub OnId_Estado_AtletaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_Estado_AtletaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Atleta", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Atleta() As Integer
		Get
			Return Me._Id_Atleta
		End Get
		Set
			If ((Me._Id_Atleta = value)  _
						= false) Then
				Me.OnId_AtletaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Atleta = value
				Me.SendPropertyChanged("Id_Atleta")
				Me.OnId_AtletaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Atleta", DbType:="VarChar(50)")>  _
	Public Property Nombre_Atleta() As String
		Get
			Return Me._Nombre_Atleta
		End Get
		Set
			If (String.Equals(Me._Nombre_Atleta, value) = false) Then
				Me.OnNombre_AtletaChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Atleta = value
				Me.SendPropertyChanged("Nombre_Atleta")
				Me.OnNombre_AtletaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apellido_Atleta", DbType:="VarChar(50)")>  _
	Public Property Apellido_Atleta() As String
		Get
			Return Me._Apellido_Atleta
		End Get
		Set
			If (String.Equals(Me._Apellido_Atleta, value) = false) Then
				Me.OnApellido_AtletaChanging(value)
				Me.SendPropertyChanging
				Me._Apellido_Atleta = value
				Me.SendPropertyChanged("Apellido_Atleta")
				Me.OnApellido_AtletaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Nacimiento", DbType:="Date")>  _
	Public Property Fecha_Nacimiento() As System.Nullable(Of Date)
		Get
			Return Me._Fecha_Nacimiento
		End Get
		Set
			If (Me._Fecha_Nacimiento.Equals(value) = false) Then
				Me.OnFecha_NacimientoChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Nacimiento = value
				Me.SendPropertyChanged("Fecha_Nacimiento")
				Me.OnFecha_NacimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dni", DbType:="VarChar(50)")>  _
	Public Property Dni() As String
		Get
			Return Me._Dni
		End Get
		Set
			If (String.Equals(Me._Dni, value) = false) Then
				Me.OnDniChanging(value)
				Me.SendPropertyChanging
				Me._Dni = value
				Me.SendPropertyChanged("Dni")
				Me.OnDniChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nacionalidad", DbType:="VarChar(50)")>  _
	Public Property Nacionalidad() As String
		Get
			Return Me._Nacionalidad
		End Get
		Set
			If (String.Equals(Me._Nacionalidad, value) = false) Then
				Me.OnNacionalidadChanging(value)
				Me.SendPropertyChanging
				Me._Nacionalidad = value
				Me.SendPropertyChanged("Nacionalidad")
				Me.OnNacionalidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Provincia", DbType:="Int")>  _
	Public Property Id_Provincia() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Provincia
		End Get
		Set
			If (Me._Id_Provincia.Equals(value) = false) Then
				Me.OnId_ProvinciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Provincia = value
				Me.SendPropertyChanged("Id_Provincia")
				Me.OnId_ProvinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Localidad", DbType:="Int")>  _
	Public Property Id_Localidad() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Localidad
		End Get
		Set
			If (Me._Id_Localidad.Equals(value) = false) Then
				Me.OnId_LocalidadChanging(value)
				Me.SendPropertyChanging
				Me._Id_Localidad = value
				Me.SendPropertyChanged("Id_Localidad")
				Me.OnId_LocalidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Domicilio", DbType:="VarChar(50)")>  _
	Public Property Domicilio() As String
		Get
			Return Me._Domicilio
		End Get
		Set
			If (String.Equals(Me._Domicilio, value) = false) Then
				Me.OnDomicilioChanging(value)
				Me.SendPropertyChanging
				Me._Domicilio = value
				Me.SendPropertyChanged("Domicilio")
				Me.OnDomicilioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Barrio", DbType:="VarChar(50)")>  _
	Public Property Barrio() As String
		Get
			Return Me._Barrio
		End Get
		Set
			If (String.Equals(Me._Barrio, value) = false) Then
				Me.OnBarrioChanging(value)
				Me.SendPropertyChanging
				Me._Barrio = value
				Me.SendPropertyChanged("Barrio")
				Me.OnBarrioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Teléfono_Fijo", DbType:="VarChar(50)")>  _
	Public Property Teléfono_Fijo() As String
		Get
			Return Me._Teléfono_Fijo
		End Get
		Set
			If (String.Equals(Me._Teléfono_Fijo, value) = false) Then
				Me.OnTeléfono_FijoChanging(value)
				Me.SendPropertyChanging
				Me._Teléfono_Fijo = value
				Me.SendPropertyChanged("Teléfono_Fijo")
				Me.OnTeléfono_FijoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Teléfono_Celular", DbType:="VarChar(50)")>  _
	Public Property Teléfono_Celular() As String
		Get
			Return Me._Teléfono_Celular
		End Get
		Set
			If (String.Equals(Me._Teléfono_Celular, value) = false) Then
				Me.OnTeléfono_CelularChanging(value)
				Me.SendPropertyChanging
				Me._Teléfono_Celular = value
				Me.SendPropertyChanged("Teléfono_Celular")
				Me.OnTeléfono_CelularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E_mail", DbType:="VarChar(50)")>  _
	Public Property E_mail() As String
		Get
			Return Me._E_mail
		End Get
		Set
			If (String.Equals(Me._E_mail, value) = false) Then
				Me.OnE_mailChanging(value)
				Me.SendPropertyChanging
				Me._E_mail = value
				Me.SendPropertyChanged("E_mail")
				Me.OnE_mailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contacto_Emergencia", DbType:="VarChar(50)")>  _
	Public Property Contacto_Emergencia() As String
		Get
			Return Me._Contacto_Emergencia
		End Get
		Set
			If (String.Equals(Me._Contacto_Emergencia, value) = false) Then
				Me.OnContacto_EmergenciaChanging(value)
				Me.SendPropertyChanging
				Me._Contacto_Emergencia = value
				Me.SendPropertyChanged("Contacto_Emergencia")
				Me.OnContacto_EmergenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cobertura_Médica", DbType:="Char(2)")>  _
	Public Property Cobertura_Médica() As String
		Get
			Return Me._Cobertura_Médica
		End Get
		Set
			If (String.Equals(Me._Cobertura_Médica, value) = false) Then
				Me.OnCobertura_MédicaChanging(value)
				Me.SendPropertyChanging
				Me._Cobertura_Médica = value
				Me.SendPropertyChanged("Cobertura_Médica")
				Me.OnCobertura_MédicaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Federado", DbType:="Char(2)")>  _
	Public Property Federado() As String
		Get
			Return Me._Federado
		End Get
		Set
			If (String.Equals(Me._Federado, value) = false) Then
				Me.OnFederadoChanging(value)
				Me.SendPropertyChanging
				Me._Federado = value
				Me.SendPropertyChanged("Federado")
				Me.OnFederadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nro_Federado", DbType:="VarChar(50)")>  _
	Public Property Nro_Federado() As String
		Get
			Return Me._Nro_Federado
		End Get
		Set
			If (String.Equals(Me._Nro_Federado, value) = false) Then
				Me.OnNro_FederadoChanging(value)
				Me.SendPropertyChanging
				Me._Nro_Federado = value
				Me.SendPropertyChanged("Nro_Federado")
				Me.OnNro_FederadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Club_Federación", DbType:="Int")>  _
	Public Property Id_Club_Federación() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Club_Federación
		End Get
		Set
			If (Me._Id_Club_Federación.Equals(value) = false) Then
				Me.OnId_Club_FederaciónChanging(value)
				Me.SendPropertyChanging
				Me._Id_Club_Federación = value
				Me.SendPropertyChanged("Id_Club_Federación")
				Me.OnId_Club_FederaciónChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Otra_Institución", DbType:="VarChar(50)")>  _
	Public Property Otra_Institución() As String
		Get
			Return Me._Otra_Institución
		End Get
		Set
			If (String.Equals(Me._Otra_Institución, value) = false) Then
				Me.OnOtra_InstituciónChanging(value)
				Me.SendPropertyChanging
				Me._Otra_Institución = value
				Me.SendPropertyChanged("Otra_Institución")
				Me.OnOtra_InstituciónChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pago", DbType:="Char(2)")>  _
	Public Property Pago() As String
		Get
			Return Me._Pago
		End Get
		Set
			If (String.Equals(Me._Pago, value) = false) Then
				Me.OnPagoChanging(value)
				Me.SendPropertyChanging
				Me._Pago = value
				Me.SendPropertyChanged("Pago")
				Me.OnPagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Importe", DbType:="Money")>  _
	Public Property Importe() As System.Nullable(Of Decimal)
		Get
			Return Me._Importe
		End Get
		Set
			If (Me._Importe.Equals(value) = false) Then
				Me.OnImporteChanging(value)
				Me.SendPropertyChanging
				Me._Importe = value
				Me.SendPropertyChanged("Importe")
				Me.OnImporteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Forma_Pago", DbType:="VarChar(50)")>  _
	Public Property Forma_Pago() As String
		Get
			Return Me._Forma_Pago
		End Get
		Set
			If (String.Equals(Me._Forma_Pago, value) = false) Then
				Me.OnForma_PagoChanging(value)
				Me.SendPropertyChanging
				Me._Forma_Pago = value
				Me.SendPropertyChanged("Forma_Pago")
				Me.OnForma_PagoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Talle_Remera", DbType:="Int")>  _
	Public Property Id_Talle_Remera() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Talle_Remera
		End Get
		Set
			If (Me._Id_Talle_Remera.Equals(value) = false) Then
				Me.OnId_Talle_RemeraChanging(value)
				Me.SendPropertyChanging
				Me._Id_Talle_Remera = value
				Me.SendPropertyChanged("Id_Talle_Remera")
				Me.OnId_Talle_RemeraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dorsal", DbType:="Int")>  _
	Public Property Dorsal() As System.Nullable(Of Integer)
		Get
			Return Me._Dorsal
		End Get
		Set
			If (Me._Dorsal.Equals(value) = false) Then
				Me.OnDorsalChanging(value)
				Me.SendPropertyChanging
				Me._Dorsal = value
				Me.SendPropertyChanged("Dorsal")
				Me.OnDorsalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Estado_Atleta", DbType:="Int")>  _
	Public Property Id_Estado_Atleta() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Estado_Atleta
		End Get
		Set
			If (Me._Id_Estado_Atleta.Equals(value) = false) Then
				Me.OnId_Estado_AtletaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Estado_Atleta = value
				Me.SendPropertyChanged("Id_Estado_Atleta")
				Me.OnId_Estado_AtletaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Atleta_X_Competencia")>  _
Partial Public Class Atleta_X_Competencia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Atleta_X_Competencia As Integer
	
	Private _Id_Atleta As System.Nullable(Of Integer)
	
	Private _Id_Competencia As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Atleta_X_CompetenciaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Atleta_X_CompetenciaChanged()
    End Sub
    Partial Private Sub OnId_AtletaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_AtletaChanged()
    End Sub
    Partial Private Sub OnId_CompetenciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_CompetenciaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Atleta_X_Competencia", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Atleta_X_Competencia() As Integer
		Get
			Return Me._Id_Atleta_X_Competencia
		End Get
		Set
			If ((Me._Id_Atleta_X_Competencia = value)  _
						= false) Then
				Me.OnId_Atleta_X_CompetenciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Atleta_X_Competencia = value
				Me.SendPropertyChanged("Id_Atleta_X_Competencia")
				Me.OnId_Atleta_X_CompetenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Atleta", DbType:="Int")>  _
	Public Property Id_Atleta() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Atleta
		End Get
		Set
			If (Me._Id_Atleta.Equals(value) = false) Then
				Me.OnId_AtletaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Atleta = value
				Me.SendPropertyChanged("Id_Atleta")
				Me.OnId_AtletaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Competencia", DbType:="Int")>  _
	Public Property Id_Competencia() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Competencia
		End Get
		Set
			If (Me._Id_Competencia.Equals(value) = false) Then
				Me.OnId_CompetenciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Competencia = value
				Me.SendPropertyChanged("Id_Competencia")
				Me.OnId_CompetenciaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Categoría")>  _
Partial Public Class Categoría
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Categoría As Integer
	
	Private _Nombre_Categoría As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_CategoríaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_CategoríaChanged()
    End Sub
    Partial Private Sub OnNombre_CategoríaChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_CategoríaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Categoría", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Categoría() As Integer
		Get
			Return Me._Id_Categoría
		End Get
		Set
			If ((Me._Id_Categoría = value)  _
						= false) Then
				Me.OnId_CategoríaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Categoría = value
				Me.SendPropertyChanged("Id_Categoría")
				Me.OnId_CategoríaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Categoría", DbType:="VarChar(50)")>  _
	Public Property Nombre_Categoría() As String
		Get
			Return Me._Nombre_Categoría
		End Get
		Set
			If (String.Equals(Me._Nombre_Categoría, value) = false) Then
				Me.OnNombre_CategoríaChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Categoría = value
				Me.SendPropertyChanged("Nombre_Categoría")
				Me.OnNombre_CategoríaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Club_Federación")>  _
Partial Public Class Club_Federación
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Club_Federación As Integer
	
	Private _Nombre_Club As String
	
	Private _Id_Provincia As System.Nullable(Of Integer)
	
	Private _Id_Localidad As System.Nullable(Of Integer)
	
	Private _Dirección As String
	
	Private _Teléfono_Fijo As String
	
	Private _Teléfono_Celular As String
	
	Private _E_mail As String
	
	Private _Localidad As EntityRef(Of Localidad)
	
	Private _Provincia As EntityRef(Of Provincia)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Club_FederaciónChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Club_FederaciónChanged()
    End Sub
    Partial Private Sub OnNombre_ClubChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_ClubChanged()
    End Sub
    Partial Private Sub OnId_ProvinciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_ProvinciaChanged()
    End Sub
    Partial Private Sub OnId_LocalidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_LocalidadChanged()
    End Sub
    Partial Private Sub OnDirecciónChanging(value As String)
    End Sub
    Partial Private Sub OnDirecciónChanged()
    End Sub
    Partial Private Sub OnTeléfono_FijoChanging(value As String)
    End Sub
    Partial Private Sub OnTeléfono_FijoChanged()
    End Sub
    Partial Private Sub OnTeléfono_CelularChanging(value As String)
    End Sub
    Partial Private Sub OnTeléfono_CelularChanged()
    End Sub
    Partial Private Sub OnE_mailChanging(value As String)
    End Sub
    Partial Private Sub OnE_mailChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Localidad = CType(Nothing, EntityRef(Of Localidad))
		Me._Provincia = CType(Nothing, EntityRef(Of Provincia))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Club_Federación", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Club_Federación() As Integer
		Get
			Return Me._Id_Club_Federación
		End Get
		Set
			If ((Me._Id_Club_Federación = value)  _
						= false) Then
				Me.OnId_Club_FederaciónChanging(value)
				Me.SendPropertyChanging
				Me._Id_Club_Federación = value
				Me.SendPropertyChanged("Id_Club_Federación")
				Me.OnId_Club_FederaciónChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Club", DbType:="VarChar(50)")>  _
	Public Property Nombre_Club() As String
		Get
			Return Me._Nombre_Club
		End Get
		Set
			If (String.Equals(Me._Nombre_Club, value) = false) Then
				Me.OnNombre_ClubChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Club = value
				Me.SendPropertyChanged("Nombre_Club")
				Me.OnNombre_ClubChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Provincia", DbType:="Int")>  _
	Public Property Id_Provincia() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Provincia
		End Get
		Set
			If (Me._Id_Provincia.Equals(value) = false) Then
				If Me._Provincia.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnId_ProvinciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Provincia = value
				Me.SendPropertyChanged("Id_Provincia")
				Me.OnId_ProvinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Localidad", DbType:="Int")>  _
	Public Property Id_Localidad() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Localidad
		End Get
		Set
			If (Me._Id_Localidad.Equals(value) = false) Then
				If Me._Localidad.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnId_LocalidadChanging(value)
				Me.SendPropertyChanging
				Me._Id_Localidad = value
				Me.SendPropertyChanged("Id_Localidad")
				Me.OnId_LocalidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dirección", DbType:="VarChar(50)")>  _
	Public Property Dirección() As String
		Get
			Return Me._Dirección
		End Get
		Set
			If (String.Equals(Me._Dirección, value) = false) Then
				Me.OnDirecciónChanging(value)
				Me.SendPropertyChanging
				Me._Dirección = value
				Me.SendPropertyChanged("Dirección")
				Me.OnDirecciónChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Teléfono_Fijo", DbType:="VarChar(50)")>  _
	Public Property Teléfono_Fijo() As String
		Get
			Return Me._Teléfono_Fijo
		End Get
		Set
			If (String.Equals(Me._Teléfono_Fijo, value) = false) Then
				Me.OnTeléfono_FijoChanging(value)
				Me.SendPropertyChanging
				Me._Teléfono_Fijo = value
				Me.SendPropertyChanged("Teléfono_Fijo")
				Me.OnTeléfono_FijoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Teléfono_Celular", DbType:="VarChar(50)")>  _
	Public Property Teléfono_Celular() As String
		Get
			Return Me._Teléfono_Celular
		End Get
		Set
			If (String.Equals(Me._Teléfono_Celular, value) = false) Then
				Me.OnTeléfono_CelularChanging(value)
				Me.SendPropertyChanging
				Me._Teléfono_Celular = value
				Me.SendPropertyChanged("Teléfono_Celular")
				Me.OnTeléfono_CelularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E_mail", DbType:="VarChar(50)")>  _
	Public Property E_mail() As String
		Get
			Return Me._E_mail
		End Get
		Set
			If (String.Equals(Me._E_mail, value) = false) Then
				Me.OnE_mailChanging(value)
				Me.SendPropertyChanging
				Me._E_mail = value
				Me.SendPropertyChanged("E_mail")
				Me.OnE_mailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Localidad_Club_Federación", Storage:="_Localidad", ThisKey:="Id_Localidad", OtherKey:="Id_Localidad", IsForeignKey:=true)>  _
	Public Property Localidad() As Localidad
		Get
			Return Me._Localidad.Entity
		End Get
		Set
			Dim previousValue As Localidad = Me._Localidad.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Localidad.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Localidad.Entity = Nothing
					previousValue.Club_Federación.Remove(Me)
				End If
				Me._Localidad.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Club_Federación.Add(Me)
					Me._Id_Localidad = value.Id_Localidad
				Else
					Me._Id_Localidad = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Localidad")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Provincia_Club_Federación", Storage:="_Provincia", ThisKey:="Id_Provincia", OtherKey:="Id_Provincia", IsForeignKey:=true)>  _
	Public Property Provincia() As Provincia
		Get
			Return Me._Provincia.Entity
		End Get
		Set
			Dim previousValue As Provincia = Me._Provincia.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Provincia.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Provincia.Entity = Nothing
					previousValue.Club_Federación.Remove(Me)
				End If
				Me._Provincia.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Club_Federación.Add(Me)
					Me._Id_Provincia = value.Id_Provincia
				Else
					Me._Id_Provincia = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Provincia")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Competencia")>  _
Partial Public Class Competencia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Competencia As Integer
	
	Private _Nombre_Competencia As String
	
	Private _Lugar_Competencia As String
	
	Private _Fecha_Inicio As System.Nullable(Of Date)
	
	Private _Hora_Inicio As System.Nullable(Of System.TimeSpan)
	
	Private _Edición_Competencia As String
	
	Private _Id_Provincia As System.Nullable(Of Integer)
	
	Private _Id_Localidad As System.Nullable(Of Integer)
	
	Private _Id_Usuario As System.Nullable(Of Integer)
	
	Private _Id_Estado_Competencia As System.Nullable(Of Integer)
	
	Private _Id_Tipo_Disciplina As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_CompetenciaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_CompetenciaChanged()
    End Sub
    Partial Private Sub OnNombre_CompetenciaChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_CompetenciaChanged()
    End Sub
    Partial Private Sub OnLugar_CompetenciaChanging(value As String)
    End Sub
    Partial Private Sub OnLugar_CompetenciaChanged()
    End Sub
    Partial Private Sub OnFecha_InicioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFecha_InicioChanged()
    End Sub
    Partial Private Sub OnHora_InicioChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHora_InicioChanged()
    End Sub
    Partial Private Sub OnEdición_CompetenciaChanging(value As String)
    End Sub
    Partial Private Sub OnEdición_CompetenciaChanged()
    End Sub
    Partial Private Sub OnId_ProvinciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_ProvinciaChanged()
    End Sub
    Partial Private Sub OnId_LocalidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_LocalidadChanged()
    End Sub
    Partial Private Sub OnId_UsuarioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_UsuarioChanged()
    End Sub
    Partial Private Sub OnId_Estado_CompetenciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_Estado_CompetenciaChanged()
    End Sub
    Partial Private Sub OnId_Tipo_DisciplinaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_Tipo_DisciplinaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Competencia", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Competencia() As Integer
		Get
			Return Me._Id_Competencia
		End Get
		Set
			If ((Me._Id_Competencia = value)  _
						= false) Then
				Me.OnId_CompetenciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Competencia = value
				Me.SendPropertyChanged("Id_Competencia")
				Me.OnId_CompetenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Competencia", DbType:="VarChar(50)")>  _
	Public Property Nombre_Competencia() As String
		Get
			Return Me._Nombre_Competencia
		End Get
		Set
			If (String.Equals(Me._Nombre_Competencia, value) = false) Then
				Me.OnNombre_CompetenciaChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Competencia = value
				Me.SendPropertyChanged("Nombre_Competencia")
				Me.OnNombre_CompetenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Lugar_Competencia", DbType:="VarChar(50)")>  _
	Public Property Lugar_Competencia() As String
		Get
			Return Me._Lugar_Competencia
		End Get
		Set
			If (String.Equals(Me._Lugar_Competencia, value) = false) Then
				Me.OnLugar_CompetenciaChanging(value)
				Me.SendPropertyChanging
				Me._Lugar_Competencia = value
				Me.SendPropertyChanged("Lugar_Competencia")
				Me.OnLugar_CompetenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Inicio", DbType:="Date")>  _
	Public Property Fecha_Inicio() As System.Nullable(Of Date)
		Get
			Return Me._Fecha_Inicio
		End Get
		Set
			If (Me._Fecha_Inicio.Equals(value) = false) Then
				Me.OnFecha_InicioChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Inicio = value
				Me.SendPropertyChanged("Fecha_Inicio")
				Me.OnFecha_InicioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora_Inicio", DbType:="Time")>  _
	Public Property Hora_Inicio() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._Hora_Inicio
		End Get
		Set
			If (Me._Hora_Inicio.Equals(value) = false) Then
				Me.OnHora_InicioChanging(value)
				Me.SendPropertyChanging
				Me._Hora_Inicio = value
				Me.SendPropertyChanged("Hora_Inicio")
				Me.OnHora_InicioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edición_Competencia", DbType:="VarChar(50)")>  _
	Public Property Edición_Competencia() As String
		Get
			Return Me._Edición_Competencia
		End Get
		Set
			If (String.Equals(Me._Edición_Competencia, value) = false) Then
				Me.OnEdición_CompetenciaChanging(value)
				Me.SendPropertyChanging
				Me._Edición_Competencia = value
				Me.SendPropertyChanged("Edición_Competencia")
				Me.OnEdición_CompetenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Provincia", DbType:="Int")>  _
	Public Property Id_Provincia() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Provincia
		End Get
		Set
			If (Me._Id_Provincia.Equals(value) = false) Then
				Me.OnId_ProvinciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Provincia = value
				Me.SendPropertyChanged("Id_Provincia")
				Me.OnId_ProvinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Localidad", DbType:="Int")>  _
	Public Property Id_Localidad() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Localidad
		End Get
		Set
			If (Me._Id_Localidad.Equals(value) = false) Then
				Me.OnId_LocalidadChanging(value)
				Me.SendPropertyChanging
				Me._Id_Localidad = value
				Me.SendPropertyChanged("Id_Localidad")
				Me.OnId_LocalidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Usuario", DbType:="Int")>  _
	Public Property Id_Usuario() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Usuario
		End Get
		Set
			If (Me._Id_Usuario.Equals(value) = false) Then
				Me.OnId_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Id_Usuario = value
				Me.SendPropertyChanged("Id_Usuario")
				Me.OnId_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Estado_Competencia", DbType:="Int")>  _
	Public Property Id_Estado_Competencia() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Estado_Competencia
		End Get
		Set
			If (Me._Id_Estado_Competencia.Equals(value) = false) Then
				Me.OnId_Estado_CompetenciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Estado_Competencia = value
				Me.SendPropertyChanged("Id_Estado_Competencia")
				Me.OnId_Estado_CompetenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Tipo_Disciplina", DbType:="Int")>  _
	Public Property Id_Tipo_Disciplina() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Tipo_Disciplina
		End Get
		Set
			If (Me._Id_Tipo_Disciplina.Equals(value) = false) Then
				Me.OnId_Tipo_DisciplinaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Tipo_Disciplina = value
				Me.SendPropertyChanged("Id_Tipo_Disciplina")
				Me.OnId_Tipo_DisciplinaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Estado_Atleta")>  _
Partial Public Class Estado_Atleta
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Estado_Atleta As Integer
	
	Private _Estado_Atleta As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Estado_AtletaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Estado_AtletaChanged()
    End Sub
    Partial Private Sub OnEstado_AtletaChanging(value As String)
    End Sub
    Partial Private Sub OnEstado_AtletaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Estado_Atleta", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Estado_Atleta() As Integer
		Get
			Return Me._Id_Estado_Atleta
		End Get
		Set
			If ((Me._Id_Estado_Atleta = value)  _
						= false) Then
				Me.OnId_Estado_AtletaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Estado_Atleta = value
				Me.SendPropertyChanged("Id_Estado_Atleta")
				Me.OnId_Estado_AtletaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado_Atleta", DbType:="VarChar(50)")>  _
	Public Property Estado_Atleta() As String
		Get
			Return Me._Estado_Atleta
		End Get
		Set
			If (String.Equals(Me._Estado_Atleta, value) = false) Then
				Me.OnEstado_AtletaChanging(value)
				Me.SendPropertyChanging
				Me._Estado_Atleta = value
				Me.SendPropertyChanged("Estado_Atleta")
				Me.OnEstado_AtletaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Estado_Competencia")>  _
Partial Public Class Estado_Competencia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Estado_Competencia As Integer
	
	Private _Estado_Competencia As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Estado_CompetenciaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Estado_CompetenciaChanged()
    End Sub
    Partial Private Sub OnEstado_CompetenciaChanging(value As String)
    End Sub
    Partial Private Sub OnEstado_CompetenciaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Estado_Competencia", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Estado_Competencia() As Integer
		Get
			Return Me._Id_Estado_Competencia
		End Get
		Set
			If ((Me._Id_Estado_Competencia = value)  _
						= false) Then
				Me.OnId_Estado_CompetenciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Estado_Competencia = value
				Me.SendPropertyChanged("Id_Estado_Competencia")
				Me.OnId_Estado_CompetenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado_Competencia", DbType:="VarChar(50)")>  _
	Public Property Estado_Competencia() As String
		Get
			Return Me._Estado_Competencia
		End Get
		Set
			If (String.Equals(Me._Estado_Competencia, value) = false) Then
				Me.OnEstado_CompetenciaChanging(value)
				Me.SendPropertyChanging
				Me._Estado_Competencia = value
				Me.SendPropertyChanged("Estado_Competencia")
				Me.OnEstado_CompetenciaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Juez")>  _
Partial Public Class Juez
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Juez As Integer
	
	Private _Nombre_Juez As String
	
	Private _Apellido_Juez As String
	
	Private _Dni_Juez As String
	
	Private _Nacionalidad As String
	
	Private _Id_Provincia As System.Nullable(Of Integer)
	
	Private _Domicilio As String
	
	Private _Teléfono_Fijo As String
	
	Private _Teléfono_Celular As String
	
	Private _E_mail As String
	
	Private _Id_Tipo_Juez As System.Nullable(Of Integer)
	
	Private _Nro_Licencia As String
	
	Private _Provincia As EntityRef(Of Provincia)
	
	Private _Tipo_Juez As EntityRef(Of Tipo_Juez)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_JuezChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_JuezChanged()
    End Sub
    Partial Private Sub OnNombre_JuezChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_JuezChanged()
    End Sub
    Partial Private Sub OnApellido_JuezChanging(value As String)
    End Sub
    Partial Private Sub OnApellido_JuezChanged()
    End Sub
    Partial Private Sub OnDni_JuezChanging(value As String)
    End Sub
    Partial Private Sub OnDni_JuezChanged()
    End Sub
    Partial Private Sub OnNacionalidadChanging(value As String)
    End Sub
    Partial Private Sub OnNacionalidadChanged()
    End Sub
    Partial Private Sub OnId_ProvinciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_ProvinciaChanged()
    End Sub
    Partial Private Sub OnDomicilioChanging(value As String)
    End Sub
    Partial Private Sub OnDomicilioChanged()
    End Sub
    Partial Private Sub OnTeléfono_FijoChanging(value As String)
    End Sub
    Partial Private Sub OnTeléfono_FijoChanged()
    End Sub
    Partial Private Sub OnTeléfono_CelularChanging(value As String)
    End Sub
    Partial Private Sub OnTeléfono_CelularChanged()
    End Sub
    Partial Private Sub OnE_mailChanging(value As String)
    End Sub
    Partial Private Sub OnE_mailChanged()
    End Sub
    Partial Private Sub OnId_Tipo_JuezChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_Tipo_JuezChanged()
    End Sub
    Partial Private Sub OnNro_LicenciaChanging(value As String)
    End Sub
    Partial Private Sub OnNro_LicenciaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Provincia = CType(Nothing, EntityRef(Of Provincia))
		Me._Tipo_Juez = CType(Nothing, EntityRef(Of Tipo_Juez))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Juez", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Juez() As Integer
		Get
			Return Me._Id_Juez
		End Get
		Set
			If ((Me._Id_Juez = value)  _
						= false) Then
				Me.OnId_JuezChanging(value)
				Me.SendPropertyChanging
				Me._Id_Juez = value
				Me.SendPropertyChanged("Id_Juez")
				Me.OnId_JuezChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Juez", DbType:="VarChar(50)")>  _
	Public Property Nombre_Juez() As String
		Get
			Return Me._Nombre_Juez
		End Get
		Set
			If (String.Equals(Me._Nombre_Juez, value) = false) Then
				Me.OnNombre_JuezChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Juez = value
				Me.SendPropertyChanged("Nombre_Juez")
				Me.OnNombre_JuezChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apellido_Juez", DbType:="VarChar(50)")>  _
	Public Property Apellido_Juez() As String
		Get
			Return Me._Apellido_Juez
		End Get
		Set
			If (String.Equals(Me._Apellido_Juez, value) = false) Then
				Me.OnApellido_JuezChanging(value)
				Me.SendPropertyChanging
				Me._Apellido_Juez = value
				Me.SendPropertyChanged("Apellido_Juez")
				Me.OnApellido_JuezChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dni_Juez", DbType:="VarChar(50)")>  _
	Public Property Dni_Juez() As String
		Get
			Return Me._Dni_Juez
		End Get
		Set
			If (String.Equals(Me._Dni_Juez, value) = false) Then
				Me.OnDni_JuezChanging(value)
				Me.SendPropertyChanging
				Me._Dni_Juez = value
				Me.SendPropertyChanged("Dni_Juez")
				Me.OnDni_JuezChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nacionalidad", DbType:="VarChar(50)")>  _
	Public Property Nacionalidad() As String
		Get
			Return Me._Nacionalidad
		End Get
		Set
			If (String.Equals(Me._Nacionalidad, value) = false) Then
				Me.OnNacionalidadChanging(value)
				Me.SendPropertyChanging
				Me._Nacionalidad = value
				Me.SendPropertyChanged("Nacionalidad")
				Me.OnNacionalidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Provincia", DbType:="Int")>  _
	Public Property Id_Provincia() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Provincia
		End Get
		Set
			If (Me._Id_Provincia.Equals(value) = false) Then
				If Me._Provincia.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnId_ProvinciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Provincia = value
				Me.SendPropertyChanged("Id_Provincia")
				Me.OnId_ProvinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Domicilio", DbType:="VarChar(50)")>  _
	Public Property Domicilio() As String
		Get
			Return Me._Domicilio
		End Get
		Set
			If (String.Equals(Me._Domicilio, value) = false) Then
				Me.OnDomicilioChanging(value)
				Me.SendPropertyChanging
				Me._Domicilio = value
				Me.SendPropertyChanged("Domicilio")
				Me.OnDomicilioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Teléfono_Fijo", DbType:="VarChar(50)")>  _
	Public Property Teléfono_Fijo() As String
		Get
			Return Me._Teléfono_Fijo
		End Get
		Set
			If (String.Equals(Me._Teléfono_Fijo, value) = false) Then
				Me.OnTeléfono_FijoChanging(value)
				Me.SendPropertyChanging
				Me._Teléfono_Fijo = value
				Me.SendPropertyChanged("Teléfono_Fijo")
				Me.OnTeléfono_FijoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Teléfono_Celular", DbType:="VarChar(50)")>  _
	Public Property Teléfono_Celular() As String
		Get
			Return Me._Teléfono_Celular
		End Get
		Set
			If (String.Equals(Me._Teléfono_Celular, value) = false) Then
				Me.OnTeléfono_CelularChanging(value)
				Me.SendPropertyChanging
				Me._Teléfono_Celular = value
				Me.SendPropertyChanged("Teléfono_Celular")
				Me.OnTeléfono_CelularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E_mail", DbType:="VarChar(50)")>  _
	Public Property E_mail() As String
		Get
			Return Me._E_mail
		End Get
		Set
			If (String.Equals(Me._E_mail, value) = false) Then
				Me.OnE_mailChanging(value)
				Me.SendPropertyChanging
				Me._E_mail = value
				Me.SendPropertyChanged("E_mail")
				Me.OnE_mailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Tipo_Juez", DbType:="Int")>  _
	Public Property Id_Tipo_Juez() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Tipo_Juez
		End Get
		Set
			If (Me._Id_Tipo_Juez.Equals(value) = false) Then
				If Me._Tipo_Juez.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnId_Tipo_JuezChanging(value)
				Me.SendPropertyChanging
				Me._Id_Tipo_Juez = value
				Me.SendPropertyChanged("Id_Tipo_Juez")
				Me.OnId_Tipo_JuezChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nro_Licencia", DbType:="VarChar(50)")>  _
	Public Property Nro_Licencia() As String
		Get
			Return Me._Nro_Licencia
		End Get
		Set
			If (String.Equals(Me._Nro_Licencia, value) = false) Then
				Me.OnNro_LicenciaChanging(value)
				Me.SendPropertyChanging
				Me._Nro_Licencia = value
				Me.SendPropertyChanged("Nro_Licencia")
				Me.OnNro_LicenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Provincia_Juez", Storage:="_Provincia", ThisKey:="Id_Provincia", OtherKey:="Id_Provincia", IsForeignKey:=true)>  _
	Public Property Provincia() As Provincia
		Get
			Return Me._Provincia.Entity
		End Get
		Set
			Dim previousValue As Provincia = Me._Provincia.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Provincia.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Provincia.Entity = Nothing
					previousValue.Juez.Remove(Me)
				End If
				Me._Provincia.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Juez.Add(Me)
					Me._Id_Provincia = value.Id_Provincia
				Else
					Me._Id_Provincia = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Provincia")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Tipo_Juez_Juez", Storage:="_Tipo_Juez", ThisKey:="Id_Tipo_Juez", OtherKey:="Id_Tipo_Juez", IsForeignKey:=true)>  _
	Public Property Tipo_Juez() As Tipo_Juez
		Get
			Return Me._Tipo_Juez.Entity
		End Get
		Set
			Dim previousValue As Tipo_Juez = Me._Tipo_Juez.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Tipo_Juez.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Tipo_Juez.Entity = Nothing
					previousValue.Juez.Remove(Me)
				End If
				Me._Tipo_Juez.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Juez.Add(Me)
					Me._Id_Tipo_Juez = value.Id_Tipo_Juez
				Else
					Me._Id_Tipo_Juez = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Tipo_Juez")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Juez_X_Prueba")>  _
Partial Public Class Juez_X_Prueba
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Juez_X_Prueba As Integer
	
	Private _Id_Juez As System.Nullable(Of Integer)
	
	Private _Id_Prueba As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Juez_X_PruebaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Juez_X_PruebaChanged()
    End Sub
    Partial Private Sub OnId_JuezChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_JuezChanged()
    End Sub
    Partial Private Sub OnId_PruebaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_PruebaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Juez_X_Prueba", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Juez_X_Prueba() As Integer
		Get
			Return Me._Id_Juez_X_Prueba
		End Get
		Set
			If ((Me._Id_Juez_X_Prueba = value)  _
						= false) Then
				Me.OnId_Juez_X_PruebaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Juez_X_Prueba = value
				Me.SendPropertyChanged("Id_Juez_X_Prueba")
				Me.OnId_Juez_X_PruebaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Juez", DbType:="Int")>  _
	Public Property Id_Juez() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Juez
		End Get
		Set
			If (Me._Id_Juez.Equals(value) = false) Then
				Me.OnId_JuezChanging(value)
				Me.SendPropertyChanging
				Me._Id_Juez = value
				Me.SendPropertyChanged("Id_Juez")
				Me.OnId_JuezChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Prueba", DbType:="Int")>  _
	Public Property Id_Prueba() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Prueba
		End Get
		Set
			If (Me._Id_Prueba.Equals(value) = false) Then
				Me.OnId_PruebaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Prueba = value
				Me.SendPropertyChanged("Id_Prueba")
				Me.OnId_PruebaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Localidad")>  _
Partial Public Class Localidad
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Localidad As Integer
	
	Private _Nombre_Localidad As String
	
	Private _Id_Provincia As System.Nullable(Of Integer)
	
	Private _Club_Federación As EntitySet(Of Club_Federación)
	
	Private _Provincia As EntityRef(Of Provincia)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_LocalidadChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_LocalidadChanged()
    End Sub
    Partial Private Sub OnNombre_LocalidadChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_LocalidadChanged()
    End Sub
    Partial Private Sub OnId_ProvinciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_ProvinciaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Club_Federación = New EntitySet(Of Club_Federación)(AddressOf Me.attach_Club_Federación, AddressOf Me.detach_Club_Federación)
		Me._Provincia = CType(Nothing, EntityRef(Of Provincia))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Localidad", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Localidad() As Integer
		Get
			Return Me._Id_Localidad
		End Get
		Set
			If ((Me._Id_Localidad = value)  _
						= false) Then
				Me.OnId_LocalidadChanging(value)
				Me.SendPropertyChanging
				Me._Id_Localidad = value
				Me.SendPropertyChanged("Id_Localidad")
				Me.OnId_LocalidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Localidad", DbType:="VarChar(50)")>  _
	Public Property Nombre_Localidad() As String
		Get
			Return Me._Nombre_Localidad
		End Get
		Set
			If (String.Equals(Me._Nombre_Localidad, value) = false) Then
				Me.OnNombre_LocalidadChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Localidad = value
				Me.SendPropertyChanged("Nombre_Localidad")
				Me.OnNombre_LocalidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Provincia", DbType:="Int")>  _
	Public Property Id_Provincia() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Provincia
		End Get
		Set
			If (Me._Id_Provincia.Equals(value) = false) Then
				If Me._Provincia.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnId_ProvinciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Provincia = value
				Me.SendPropertyChanged("Id_Provincia")
				Me.OnId_ProvinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Localidad_Club_Federación", Storage:="_Club_Federación", ThisKey:="Id_Localidad", OtherKey:="Id_Localidad")>  _
	Public Property Club_Federación() As EntitySet(Of Club_Federación)
		Get
			Return Me._Club_Federación
		End Get
		Set
			Me._Club_Federación.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Provincia_Localidad", Storage:="_Provincia", ThisKey:="Id_Provincia", OtherKey:="Id_Provincia", IsForeignKey:=true)>  _
	Public Property Provincia() As Provincia
		Get
			Return Me._Provincia.Entity
		End Get
		Set
			Dim previousValue As Provincia = Me._Provincia.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Provincia.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Provincia.Entity = Nothing
					previousValue.Localidad.Remove(Me)
				End If
				Me._Provincia.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Localidad.Add(Me)
					Me._Id_Provincia = value.Id_Provincia
				Else
					Me._Id_Provincia = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Provincia")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Club_Federación(ByVal entity As Club_Federación)
		Me.SendPropertyChanging
		entity.Localidad = Me
	End Sub
	
	Private Sub detach_Club_Federación(ByVal entity As Club_Federación)
		Me.SendPropertyChanging
		entity.Localidad = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Perfil_Usuario")>  _
Partial Public Class Perfil_Usuario
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Perfil_Usuario As Integer
	
	Private _Perfil As String
	
	Private _Usuario As EntitySet(Of Usuario)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Perfil_UsuarioChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Perfil_UsuarioChanged()
    End Sub
    Partial Private Sub OnPerfilChanging(value As String)
    End Sub
    Partial Private Sub OnPerfilChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Usuario = New EntitySet(Of Usuario)(AddressOf Me.attach_Usuario, AddressOf Me.detach_Usuario)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Perfil_Usuario", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Perfil_Usuario() As Integer
		Get
			Return Me._Id_Perfil_Usuario
		End Get
		Set
			If ((Me._Id_Perfil_Usuario = value)  _
						= false) Then
				Me.OnId_Perfil_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Id_Perfil_Usuario = value
				Me.SendPropertyChanged("Id_Perfil_Usuario")
				Me.OnId_Perfil_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Perfil", DbType:="VarChar(50)")>  _
	Public Property Perfil() As String
		Get
			Return Me._Perfil
		End Get
		Set
			If (String.Equals(Me._Perfil, value) = false) Then
				Me.OnPerfilChanging(value)
				Me.SendPropertyChanging
				Me._Perfil = value
				Me.SendPropertyChanged("Perfil")
				Me.OnPerfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Perfil_Usuario_Usuario", Storage:="_Usuario", ThisKey:="Id_Perfil_Usuario", OtherKey:="Id_Perfil_Usuario")>  _
	Public Property Usuario() As EntitySet(Of Usuario)
		Get
			Return Me._Usuario
		End Get
		Set
			Me._Usuario.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Usuario(ByVal entity As Usuario)
		Me.SendPropertyChanging
		entity.Perfil_Usuario = Me
	End Sub
	
	Private Sub detach_Usuario(ByVal entity As Usuario)
		Me.SendPropertyChanging
		entity.Perfil_Usuario = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Provincia")>  _
Partial Public Class Provincia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Provincia As Integer
	
	Private _Nombre_Provincia As String
	
	Private _Club_Federación As EntitySet(Of Club_Federación)
	
	Private _Juez As EntitySet(Of Juez)
	
	Private _Localidad As EntitySet(Of Localidad)
	
	Private _Usuario As EntitySet(Of Usuario)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_ProvinciaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_ProvinciaChanged()
    End Sub
    Partial Private Sub OnNombre_ProvinciaChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_ProvinciaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Club_Federación = New EntitySet(Of Club_Federación)(AddressOf Me.attach_Club_Federación, AddressOf Me.detach_Club_Federación)
		Me._Juez = New EntitySet(Of Juez)(AddressOf Me.attach_Juez, AddressOf Me.detach_Juez)
		Me._Localidad = New EntitySet(Of Localidad)(AddressOf Me.attach_Localidad, AddressOf Me.detach_Localidad)
		Me._Usuario = New EntitySet(Of Usuario)(AddressOf Me.attach_Usuario, AddressOf Me.detach_Usuario)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Provincia", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Provincia() As Integer
		Get
			Return Me._Id_Provincia
		End Get
		Set
			If ((Me._Id_Provincia = value)  _
						= false) Then
				Me.OnId_ProvinciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Provincia = value
				Me.SendPropertyChanged("Id_Provincia")
				Me.OnId_ProvinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Provincia", DbType:="VarChar(50)")>  _
	Public Property Nombre_Provincia() As String
		Get
			Return Me._Nombre_Provincia
		End Get
		Set
			If (String.Equals(Me._Nombre_Provincia, value) = false) Then
				Me.OnNombre_ProvinciaChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Provincia = value
				Me.SendPropertyChanged("Nombre_Provincia")
				Me.OnNombre_ProvinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Provincia_Club_Federación", Storage:="_Club_Federación", ThisKey:="Id_Provincia", OtherKey:="Id_Provincia")>  _
	Public Property Club_Federación() As EntitySet(Of Club_Federación)
		Get
			Return Me._Club_Federación
		End Get
		Set
			Me._Club_Federación.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Provincia_Juez", Storage:="_Juez", ThisKey:="Id_Provincia", OtherKey:="Id_Provincia")>  _
	Public Property Juez() As EntitySet(Of Juez)
		Get
			Return Me._Juez
		End Get
		Set
			Me._Juez.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Provincia_Localidad", Storage:="_Localidad", ThisKey:="Id_Provincia", OtherKey:="Id_Provincia")>  _
	Public Property Localidad() As EntitySet(Of Localidad)
		Get
			Return Me._Localidad
		End Get
		Set
			Me._Localidad.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Provincia_Usuario", Storage:="_Usuario", ThisKey:="Id_Provincia", OtherKey:="Id_Provincia")>  _
	Public Property Usuario() As EntitySet(Of Usuario)
		Get
			Return Me._Usuario
		End Get
		Set
			Me._Usuario.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Club_Federación(ByVal entity As Club_Federación)
		Me.SendPropertyChanging
		entity.Provincia = Me
	End Sub
	
	Private Sub detach_Club_Federación(ByVal entity As Club_Federación)
		Me.SendPropertyChanging
		entity.Provincia = Nothing
	End Sub
	
	Private Sub attach_Juez(ByVal entity As Juez)
		Me.SendPropertyChanging
		entity.Provincia = Me
	End Sub
	
	Private Sub detach_Juez(ByVal entity As Juez)
		Me.SendPropertyChanging
		entity.Provincia = Nothing
	End Sub
	
	Private Sub attach_Localidad(ByVal entity As Localidad)
		Me.SendPropertyChanging
		entity.Provincia = Me
	End Sub
	
	Private Sub detach_Localidad(ByVal entity As Localidad)
		Me.SendPropertyChanging
		entity.Provincia = Nothing
	End Sub
	
	Private Sub attach_Usuario(ByVal entity As Usuario)
		Me.SendPropertyChanging
		entity.Provincia = Me
	End Sub
	
	Private Sub detach_Usuario(ByVal entity As Usuario)
		Me.SendPropertyChanging
		entity.Provincia = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Prueba")>  _
Partial Public Class Prueba
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Prueba As Integer
	
	Private _Nombre_Prueba As String
	
	Private _Id_Prueba_Combinada As System.Nullable(Of Integer)
	
	Private _Id_Sexo As System.Nullable(Of Integer)
	
	Private _Id_Categoría As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_PruebaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_PruebaChanged()
    End Sub
    Partial Private Sub OnNombre_PruebaChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_PruebaChanged()
    End Sub
    Partial Private Sub OnId_Prueba_CombinadaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_Prueba_CombinadaChanged()
    End Sub
    Partial Private Sub OnId_SexoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_SexoChanged()
    End Sub
    Partial Private Sub OnId_CategoríaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_CategoríaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Prueba", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Prueba() As Integer
		Get
			Return Me._Id_Prueba
		End Get
		Set
			If ((Me._Id_Prueba = value)  _
						= false) Then
				Me.OnId_PruebaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Prueba = value
				Me.SendPropertyChanged("Id_Prueba")
				Me.OnId_PruebaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Prueba", DbType:="VarChar(50)")>  _
	Public Property Nombre_Prueba() As String
		Get
			Return Me._Nombre_Prueba
		End Get
		Set
			If (String.Equals(Me._Nombre_Prueba, value) = false) Then
				Me.OnNombre_PruebaChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Prueba = value
				Me.SendPropertyChanged("Nombre_Prueba")
				Me.OnNombre_PruebaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Prueba_Combinada", DbType:="Int")>  _
	Public Property Id_Prueba_Combinada() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Prueba_Combinada
		End Get
		Set
			If (Me._Id_Prueba_Combinada.Equals(value) = false) Then
				Me.OnId_Prueba_CombinadaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Prueba_Combinada = value
				Me.SendPropertyChanged("Id_Prueba_Combinada")
				Me.OnId_Prueba_CombinadaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Sexo", DbType:="Int")>  _
	Public Property Id_Sexo() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Sexo
		End Get
		Set
			If (Me._Id_Sexo.Equals(value) = false) Then
				Me.OnId_SexoChanging(value)
				Me.SendPropertyChanging
				Me._Id_Sexo = value
				Me.SendPropertyChanged("Id_Sexo")
				Me.OnId_SexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Categoría", DbType:="Int")>  _
	Public Property Id_Categoría() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Categoría
		End Get
		Set
			If (Me._Id_Categoría.Equals(value) = false) Then
				Me.OnId_CategoríaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Categoría = value
				Me.SendPropertyChanged("Id_Categoría")
				Me.OnId_CategoríaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Prueba_Combinada")>  _
Partial Public Class Prueba_Combinada
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Prueba_Combinada As Integer
	
	Private _Nombre_Prueba_Combinada As String
	
	Private _Id_Sexo As System.Nullable(Of Integer)
	
	Private _Id_Categoría As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Prueba_CombinadaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Prueba_CombinadaChanged()
    End Sub
    Partial Private Sub OnNombre_Prueba_CombinadaChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_Prueba_CombinadaChanged()
    End Sub
    Partial Private Sub OnId_SexoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_SexoChanged()
    End Sub
    Partial Private Sub OnId_CategoríaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_CategoríaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Prueba_Combinada", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Prueba_Combinada() As Integer
		Get
			Return Me._Id_Prueba_Combinada
		End Get
		Set
			If ((Me._Id_Prueba_Combinada = value)  _
						= false) Then
				Me.OnId_Prueba_CombinadaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Prueba_Combinada = value
				Me.SendPropertyChanged("Id_Prueba_Combinada")
				Me.OnId_Prueba_CombinadaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Prueba_Combinada", DbType:="VarChar(50)")>  _
	Public Property Nombre_Prueba_Combinada() As String
		Get
			Return Me._Nombre_Prueba_Combinada
		End Get
		Set
			If (String.Equals(Me._Nombre_Prueba_Combinada, value) = false) Then
				Me.OnNombre_Prueba_CombinadaChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Prueba_Combinada = value
				Me.SendPropertyChanged("Nombre_Prueba_Combinada")
				Me.OnNombre_Prueba_CombinadaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Sexo", DbType:="Int")>  _
	Public Property Id_Sexo() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Sexo
		End Get
		Set
			If (Me._Id_Sexo.Equals(value) = false) Then
				Me.OnId_SexoChanging(value)
				Me.SendPropertyChanging
				Me._Id_Sexo = value
				Me.SendPropertyChanged("Id_Sexo")
				Me.OnId_SexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Categoría", DbType:="Int")>  _
	Public Property Id_Categoría() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Categoría
		End Get
		Set
			If (Me._Id_Categoría.Equals(value) = false) Then
				Me.OnId_CategoríaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Categoría = value
				Me.SendPropertyChanged("Id_Categoría")
				Me.OnId_CategoríaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Prueba_Combinada_X_Prueba")>  _
Partial Public Class Prueba_Combinada_X_Prueba
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_PruebaCombinada_X_Prueba As Integer
	
	Private _Id_Prueba_Combinada As System.Nullable(Of Integer)
	
	Private _Id_Prueba As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_PruebaCombinada_X_PruebaChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_PruebaCombinada_X_PruebaChanged()
    End Sub
    Partial Private Sub OnId_Prueba_CombinadaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_Prueba_CombinadaChanged()
    End Sub
    Partial Private Sub OnId_PruebaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_PruebaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_PruebaCombinada_X_Prueba", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_PruebaCombinada_X_Prueba() As Integer
		Get
			Return Me._Id_PruebaCombinada_X_Prueba
		End Get
		Set
			If ((Me._Id_PruebaCombinada_X_Prueba = value)  _
						= false) Then
				Me.OnId_PruebaCombinada_X_PruebaChanging(value)
				Me.SendPropertyChanging
				Me._Id_PruebaCombinada_X_Prueba = value
				Me.SendPropertyChanged("Id_PruebaCombinada_X_Prueba")
				Me.OnId_PruebaCombinada_X_PruebaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Prueba_Combinada", DbType:="Int")>  _
	Public Property Id_Prueba_Combinada() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Prueba_Combinada
		End Get
		Set
			If (Me._Id_Prueba_Combinada.Equals(value) = false) Then
				Me.OnId_Prueba_CombinadaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Prueba_Combinada = value
				Me.SendPropertyChanged("Id_Prueba_Combinada")
				Me.OnId_Prueba_CombinadaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Prueba", DbType:="Int")>  _
	Public Property Id_Prueba() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Prueba
		End Get
		Set
			If (Me._Id_Prueba.Equals(value) = false) Then
				Me.OnId_PruebaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Prueba = value
				Me.SendPropertyChanged("Id_Prueba")
				Me.OnId_PruebaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Resultado_Final")>  _
Partial Public Class Resultado_Final
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Resultado_Final As Integer
	
	Private _Mejor_Tiempo As System.Nullable(Of System.TimeSpan)
	
	Private _Mejor_Altura As System.Nullable(Of Double)
	
	Private _Posición As String
	
	Private _Clasificación As System.Nullable(Of Integer)
	
	Private _Id_Prueba As System.Nullable(Of Integer)
	
	Private _Velocidad As System.Nullable(Of Double)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Resultado_FinalChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Resultado_FinalChanged()
    End Sub
    Partial Private Sub OnMejor_TiempoChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnMejor_TiempoChanged()
    End Sub
    Partial Private Sub OnMejor_AlturaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMejor_AlturaChanged()
    End Sub
    Partial Private Sub OnPosiciónChanging(value As String)
    End Sub
    Partial Private Sub OnPosiciónChanged()
    End Sub
    Partial Private Sub OnClasificaciónChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClasificaciónChanged()
    End Sub
    Partial Private Sub OnId_PruebaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_PruebaChanged()
    End Sub
    Partial Private Sub OnVelocidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVelocidadChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Resultado_Final", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Resultado_Final() As Integer
		Get
			Return Me._Id_Resultado_Final
		End Get
		Set
			If ((Me._Id_Resultado_Final = value)  _
						= false) Then
				Me.OnId_Resultado_FinalChanging(value)
				Me.SendPropertyChanging
				Me._Id_Resultado_Final = value
				Me.SendPropertyChanged("Id_Resultado_Final")
				Me.OnId_Resultado_FinalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mejor_Tiempo", DbType:="Time")>  _
	Public Property Mejor_Tiempo() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._Mejor_Tiempo
		End Get
		Set
			If (Me._Mejor_Tiempo.Equals(value) = false) Then
				Me.OnMejor_TiempoChanging(value)
				Me.SendPropertyChanging
				Me._Mejor_Tiempo = value
				Me.SendPropertyChanged("Mejor_Tiempo")
				Me.OnMejor_TiempoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mejor_Altura", DbType:="Float")>  _
	Public Property Mejor_Altura() As System.Nullable(Of Double)
		Get
			Return Me._Mejor_Altura
		End Get
		Set
			If (Me._Mejor_Altura.Equals(value) = false) Then
				Me.OnMejor_AlturaChanging(value)
				Me.SendPropertyChanging
				Me._Mejor_Altura = value
				Me.SendPropertyChanged("Mejor_Altura")
				Me.OnMejor_AlturaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posición", DbType:="VarChar(50)")>  _
	Public Property Posición() As String
		Get
			Return Me._Posición
		End Get
		Set
			If (String.Equals(Me._Posición, value) = false) Then
				Me.OnPosiciónChanging(value)
				Me.SendPropertyChanging
				Me._Posición = value
				Me.SendPropertyChanged("Posición")
				Me.OnPosiciónChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clasificación", DbType:="Int")>  _
	Public Property Clasificación() As System.Nullable(Of Integer)
		Get
			Return Me._Clasificación
		End Get
		Set
			If (Me._Clasificación.Equals(value) = false) Then
				Me.OnClasificaciónChanging(value)
				Me.SendPropertyChanging
				Me._Clasificación = value
				Me.SendPropertyChanged("Clasificación")
				Me.OnClasificaciónChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Prueba", DbType:="Int")>  _
	Public Property Id_Prueba() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Prueba
		End Get
		Set
			If (Me._Id_Prueba.Equals(value) = false) Then
				Me.OnId_PruebaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Prueba = value
				Me.SendPropertyChanged("Id_Prueba")
				Me.OnId_PruebaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Velocidad", DbType:="Float")>  _
	Public Property Velocidad() As System.Nullable(Of Double)
		Get
			Return Me._Velocidad
		End Get
		Set
			If (Me._Velocidad.Equals(value) = false) Then
				Me.OnVelocidadChanging(value)
				Me.SendPropertyChanging
				Me._Velocidad = value
				Me.SendPropertyChanged("Velocidad")
				Me.OnVelocidadChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Resultado_Parcial")>  _
Partial Public Class Resultado_Parcial
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Resultado_Parcialint As String
	
	Private _Crono1 As System.Nullable(Of System.TimeSpan)
	
	Private _Crono2 As System.Nullable(Of System.TimeSpan)
	
	Private _Crono3 As System.Nullable(Of System.TimeSpan)
	
	Private _Serie1 As String
	
	Private _Serie2 As String
	
	Private _Serie3 As String
	
	Private _SerieN As String
	
	Private _Posición As String
	
	Private _Mejor_Tiempo As System.Nullable(Of System.TimeSpan)
	
	Private _Andarivel As System.Nullable(Of Integer)
	
	Private _Clasificación As System.Nullable(Of Integer)
	
	Private _Altura1 As String
	
	Private _Altura2 As String
	
	Private _Altura3 As String
	
	Private _AlturaN As String
	
	Private _Mejor_Altura As System.Nullable(Of Double)
	
	Private _Id_Prueba As System.Nullable(Of Integer)
	
	Private _Velocidad As System.Nullable(Of Double)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Resultado_ParcialintChanging(value As String)
    End Sub
    Partial Private Sub OnId_Resultado_ParcialintChanged()
    End Sub
    Partial Private Sub OnCrono1Changing(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnCrono1Changed()
    End Sub
    Partial Private Sub OnCrono2Changing(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnCrono2Changed()
    End Sub
    Partial Private Sub OnCrono3Changing(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnCrono3Changed()
    End Sub
    Partial Private Sub OnSerie1Changing(value As String)
    End Sub
    Partial Private Sub OnSerie1Changed()
    End Sub
    Partial Private Sub OnSerie2Changing(value As String)
    End Sub
    Partial Private Sub OnSerie2Changed()
    End Sub
    Partial Private Sub OnSerie3Changing(value As String)
    End Sub
    Partial Private Sub OnSerie3Changed()
    End Sub
    Partial Private Sub OnSerieNChanging(value As String)
    End Sub
    Partial Private Sub OnSerieNChanged()
    End Sub
    Partial Private Sub OnPosiciónChanging(value As String)
    End Sub
    Partial Private Sub OnPosiciónChanged()
    End Sub
    Partial Private Sub OnMejor_TiempoChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnMejor_TiempoChanged()
    End Sub
    Partial Private Sub OnAndarivelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAndarivelChanged()
    End Sub
    Partial Private Sub OnClasificaciónChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClasificaciónChanged()
    End Sub
    Partial Private Sub OnAltura1Changing(value As String)
    End Sub
    Partial Private Sub OnAltura1Changed()
    End Sub
    Partial Private Sub OnAltura2Changing(value As String)
    End Sub
    Partial Private Sub OnAltura2Changed()
    End Sub
    Partial Private Sub OnAltura3Changing(value As String)
    End Sub
    Partial Private Sub OnAltura3Changed()
    End Sub
    Partial Private Sub OnAlturaNChanging(value As String)
    End Sub
    Partial Private Sub OnAlturaNChanged()
    End Sub
    Partial Private Sub OnMejor_AlturaChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnMejor_AlturaChanged()
    End Sub
    Partial Private Sub OnId_PruebaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_PruebaChanged()
    End Sub
    Partial Private Sub OnVelocidadChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVelocidadChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Resultado_Parcialint", DbType:="NChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Id_Resultado_Parcialint() As String
		Get
			Return Me._Id_Resultado_Parcialint
		End Get
		Set
			If (String.Equals(Me._Id_Resultado_Parcialint, value) = false) Then
				Me.OnId_Resultado_ParcialintChanging(value)
				Me.SendPropertyChanging
				Me._Id_Resultado_Parcialint = value
				Me.SendPropertyChanged("Id_Resultado_Parcialint")
				Me.OnId_Resultado_ParcialintChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Crono1", DbType:="Time")>  _
	Public Property Crono1() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._Crono1
		End Get
		Set
			If (Me._Crono1.Equals(value) = false) Then
				Me.OnCrono1Changing(value)
				Me.SendPropertyChanging
				Me._Crono1 = value
				Me.SendPropertyChanged("Crono1")
				Me.OnCrono1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Crono2", DbType:="Time")>  _
	Public Property Crono2() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._Crono2
		End Get
		Set
			If (Me._Crono2.Equals(value) = false) Then
				Me.OnCrono2Changing(value)
				Me.SendPropertyChanging
				Me._Crono2 = value
				Me.SendPropertyChanged("Crono2")
				Me.OnCrono2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Crono3", DbType:="Time")>  _
	Public Property Crono3() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._Crono3
		End Get
		Set
			If (Me._Crono3.Equals(value) = false) Then
				Me.OnCrono3Changing(value)
				Me.SendPropertyChanging
				Me._Crono3 = value
				Me.SendPropertyChanged("Crono3")
				Me.OnCrono3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie1", DbType:="VarChar(50)")>  _
	Public Property Serie1() As String
		Get
			Return Me._Serie1
		End Get
		Set
			If (String.Equals(Me._Serie1, value) = false) Then
				Me.OnSerie1Changing(value)
				Me.SendPropertyChanging
				Me._Serie1 = value
				Me.SendPropertyChanged("Serie1")
				Me.OnSerie1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie2", DbType:="VarChar(50)")>  _
	Public Property Serie2() As String
		Get
			Return Me._Serie2
		End Get
		Set
			If (String.Equals(Me._Serie2, value) = false) Then
				Me.OnSerie2Changing(value)
				Me.SendPropertyChanging
				Me._Serie2 = value
				Me.SendPropertyChanged("Serie2")
				Me.OnSerie2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie3", DbType:="VarChar(50)")>  _
	Public Property Serie3() As String
		Get
			Return Me._Serie3
		End Get
		Set
			If (String.Equals(Me._Serie3, value) = false) Then
				Me.OnSerie3Changing(value)
				Me.SendPropertyChanging
				Me._Serie3 = value
				Me.SendPropertyChanged("Serie3")
				Me.OnSerie3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SerieN", DbType:="VarChar(50)")>  _
	Public Property SerieN() As String
		Get
			Return Me._SerieN
		End Get
		Set
			If (String.Equals(Me._SerieN, value) = false) Then
				Me.OnSerieNChanging(value)
				Me.SendPropertyChanging
				Me._SerieN = value
				Me.SendPropertyChanged("SerieN")
				Me.OnSerieNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posición", DbType:="VarChar(50)")>  _
	Public Property Posición() As String
		Get
			Return Me._Posición
		End Get
		Set
			If (String.Equals(Me._Posición, value) = false) Then
				Me.OnPosiciónChanging(value)
				Me.SendPropertyChanging
				Me._Posición = value
				Me.SendPropertyChanged("Posición")
				Me.OnPosiciónChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mejor_Tiempo", DbType:="Time")>  _
	Public Property Mejor_Tiempo() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._Mejor_Tiempo
		End Get
		Set
			If (Me._Mejor_Tiempo.Equals(value) = false) Then
				Me.OnMejor_TiempoChanging(value)
				Me.SendPropertyChanging
				Me._Mejor_Tiempo = value
				Me.SendPropertyChanged("Mejor_Tiempo")
				Me.OnMejor_TiempoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Andarivel", DbType:="Int")>  _
	Public Property Andarivel() As System.Nullable(Of Integer)
		Get
			Return Me._Andarivel
		End Get
		Set
			If (Me._Andarivel.Equals(value) = false) Then
				Me.OnAndarivelChanging(value)
				Me.SendPropertyChanging
				Me._Andarivel = value
				Me.SendPropertyChanged("Andarivel")
				Me.OnAndarivelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clasificación", DbType:="Int")>  _
	Public Property Clasificación() As System.Nullable(Of Integer)
		Get
			Return Me._Clasificación
		End Get
		Set
			If (Me._Clasificación.Equals(value) = false) Then
				Me.OnClasificaciónChanging(value)
				Me.SendPropertyChanging
				Me._Clasificación = value
				Me.SendPropertyChanged("Clasificación")
				Me.OnClasificaciónChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Altura1", DbType:="VarChar(50)")>  _
	Public Property Altura1() As String
		Get
			Return Me._Altura1
		End Get
		Set
			If (String.Equals(Me._Altura1, value) = false) Then
				Me.OnAltura1Changing(value)
				Me.SendPropertyChanging
				Me._Altura1 = value
				Me.SendPropertyChanged("Altura1")
				Me.OnAltura1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Altura2", DbType:="VarChar(50)")>  _
	Public Property Altura2() As String
		Get
			Return Me._Altura2
		End Get
		Set
			If (String.Equals(Me._Altura2, value) = false) Then
				Me.OnAltura2Changing(value)
				Me.SendPropertyChanging
				Me._Altura2 = value
				Me.SendPropertyChanged("Altura2")
				Me.OnAltura2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Altura3", DbType:="VarChar(50)")>  _
	Public Property Altura3() As String
		Get
			Return Me._Altura3
		End Get
		Set
			If (String.Equals(Me._Altura3, value) = false) Then
				Me.OnAltura3Changing(value)
				Me.SendPropertyChanging
				Me._Altura3 = value
				Me.SendPropertyChanged("Altura3")
				Me.OnAltura3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AlturaN", DbType:="VarChar(50)")>  _
	Public Property AlturaN() As String
		Get
			Return Me._AlturaN
		End Get
		Set
			If (String.Equals(Me._AlturaN, value) = false) Then
				Me.OnAlturaNChanging(value)
				Me.SendPropertyChanging
				Me._AlturaN = value
				Me.SendPropertyChanged("AlturaN")
				Me.OnAlturaNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mejor_Altura", DbType:="Float")>  _
	Public Property Mejor_Altura() As System.Nullable(Of Double)
		Get
			Return Me._Mejor_Altura
		End Get
		Set
			If (Me._Mejor_Altura.Equals(value) = false) Then
				Me.OnMejor_AlturaChanging(value)
				Me.SendPropertyChanging
				Me._Mejor_Altura = value
				Me.SendPropertyChanged("Mejor_Altura")
				Me.OnMejor_AlturaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Prueba", DbType:="Int")>  _
	Public Property Id_Prueba() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Prueba
		End Get
		Set
			If (Me._Id_Prueba.Equals(value) = false) Then
				Me.OnId_PruebaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Prueba = value
				Me.SendPropertyChanged("Id_Prueba")
				Me.OnId_PruebaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Velocidad", DbType:="Float")>  _
	Public Property Velocidad() As System.Nullable(Of Double)
		Get
			Return Me._Velocidad
		End Get
		Set
			If (Me._Velocidad.Equals(value) = false) Then
				Me.OnVelocidadChanging(value)
				Me.SendPropertyChanging
				Me._Velocidad = value
				Me.SendPropertyChanged("Velocidad")
				Me.OnVelocidadChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Sexo")>  _
Partial Public Class Sexo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_sexo As Integer
	
	Private _Sexo As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_sexoChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_sexoChanged()
    End Sub
    Partial Private Sub OnSexoChanging(value As String)
    End Sub
    Partial Private Sub OnSexoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_sexo", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_sexo() As Integer
		Get
			Return Me._Id_sexo
		End Get
		Set
			If ((Me._Id_sexo = value)  _
						= false) Then
				Me.OnId_sexoChanging(value)
				Me.SendPropertyChanging
				Me._Id_sexo = value
				Me.SendPropertyChanged("Id_sexo")
				Me.OnId_sexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me.OnSexoChanging(value)
				Me.SendPropertyChanging
				Me._Sexo = value
				Me.SendPropertyChanged("Sexo")
				Me.OnSexoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Talle_Remera")>  _
Partial Public Class Talle_Remera
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Talle_Remera As Integer
	
	Private _Talle As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Talle_RemeraChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Talle_RemeraChanged()
    End Sub
    Partial Private Sub OnTalleChanging(value As String)
    End Sub
    Partial Private Sub OnTalleChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Talle_Remera", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id_Talle_Remera() As Integer
		Get
			Return Me._Id_Talle_Remera
		End Get
		Set
			If ((Me._Id_Talle_Remera = value)  _
						= false) Then
				Me.OnId_Talle_RemeraChanging(value)
				Me.SendPropertyChanging
				Me._Id_Talle_Remera = value
				Me.SendPropertyChanged("Id_Talle_Remera")
				Me.OnId_Talle_RemeraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Talle", DbType:="VarChar(50)")>  _
	Public Property Talle() As String
		Get
			Return Me._Talle
		End Get
		Set
			If (String.Equals(Me._Talle, value) = false) Then
				Me.OnTalleChanging(value)
				Me.SendPropertyChanging
				Me._Talle = value
				Me.SendPropertyChanged("Talle")
				Me.OnTalleChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Tipo_Juez")>  _
Partial Public Class Tipo_Juez
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Tipo_Juez As Integer
	
	Private _Tipo_Juez As String
	
	Private _Juez As EntitySet(Of Juez)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_Tipo_JuezChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Tipo_JuezChanged()
    End Sub
    Partial Private Sub OnTipo_JuezChanging(value As String)
    End Sub
    Partial Private Sub OnTipo_JuezChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Juez = New EntitySet(Of Juez)(AddressOf Me.attach_Juez, AddressOf Me.detach_Juez)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Tipo_Juez", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Tipo_Juez() As Integer
		Get
			Return Me._Id_Tipo_Juez
		End Get
		Set
			If ((Me._Id_Tipo_Juez = value)  _
						= false) Then
				Me.OnId_Tipo_JuezChanging(value)
				Me.SendPropertyChanging
				Me._Id_Tipo_Juez = value
				Me.SendPropertyChanged("Id_Tipo_Juez")
				Me.OnId_Tipo_JuezChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo_Juez", DbType:="VarChar(50)")>  _
	Public Property Tipo_Juez() As String
		Get
			Return Me._Tipo_Juez
		End Get
		Set
			If (String.Equals(Me._Tipo_Juez, value) = false) Then
				Me.OnTipo_JuezChanging(value)
				Me.SendPropertyChanging
				Me._Tipo_Juez = value
				Me.SendPropertyChanged("Tipo_Juez")
				Me.OnTipo_JuezChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Tipo_Juez_Juez", Storage:="_Juez", ThisKey:="Id_Tipo_Juez", OtherKey:="Id_Tipo_Juez")>  _
	Public Property Juez() As EntitySet(Of Juez)
		Get
			Return Me._Juez
		End Get
		Set
			Me._Juez.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Juez(ByVal entity As Juez)
		Me.SendPropertyChanging
		entity.Tipo_Juez = Me
	End Sub
	
	Private Sub detach_Juez(ByVal entity As Juez)
		Me.SendPropertyChanging
		entity.Tipo_Juez = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Usuario")>  _
Partial Public Class Usuario
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Usuario As Integer
	
	Private _Nombre_Usu As String
	
	Private _Apellido_Usu As String
	
	Private _Id_Provincia As System.Nullable(Of Integer)
	
	Private _Domicilio As String
	
	Private _Barrio As String
	
	Private _Teléfono_Fijo As String
	
	Private _Teléfono_Celular As String
	
	Private _E_mail As String
	
	Private _Nombre_Usuario As String
	
	Private _Contraseña As String
	
	Private _Id_Perfil_Usuario As Integer
	
	Private _Perfil_Usuario As EntityRef(Of Perfil_Usuario)
	
	Private _Provincia As EntityRef(Of Provincia)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_UsuarioChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_UsuarioChanged()
    End Sub
    Partial Private Sub OnNombre_UsuChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_UsuChanged()
    End Sub
    Partial Private Sub OnApellido_UsuChanging(value As String)
    End Sub
    Partial Private Sub OnApellido_UsuChanged()
    End Sub
    Partial Private Sub OnId_ProvinciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnId_ProvinciaChanged()
    End Sub
    Partial Private Sub OnDomicilioChanging(value As String)
    End Sub
    Partial Private Sub OnDomicilioChanged()
    End Sub
    Partial Private Sub OnBarrioChanging(value As String)
    End Sub
    Partial Private Sub OnBarrioChanged()
    End Sub
    Partial Private Sub OnTeléfono_FijoChanging(value As String)
    End Sub
    Partial Private Sub OnTeléfono_FijoChanged()
    End Sub
    Partial Private Sub OnTeléfono_CelularChanging(value As String)
    End Sub
    Partial Private Sub OnTeléfono_CelularChanged()
    End Sub
    Partial Private Sub OnE_mailChanging(value As String)
    End Sub
    Partial Private Sub OnE_mailChanged()
    End Sub
    Partial Private Sub OnNombre_UsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_UsuarioChanged()
    End Sub
    Partial Private Sub OnContraseñaChanging(value As String)
    End Sub
    Partial Private Sub OnContraseñaChanged()
    End Sub
    Partial Private Sub OnId_Perfil_UsuarioChanging(value As Integer)
    End Sub
    Partial Private Sub OnId_Perfil_UsuarioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Perfil_Usuario = CType(Nothing, EntityRef(Of Perfil_Usuario))
		Me._Provincia = CType(Nothing, EntityRef(Of Provincia))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Usuario", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Usuario() As Integer
		Get
			Return Me._Id_Usuario
		End Get
		Set
			If ((Me._Id_Usuario = value)  _
						= false) Then
				Me.OnId_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Id_Usuario = value
				Me.SendPropertyChanged("Id_Usuario")
				Me.OnId_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Usu", DbType:="VarChar(50)")>  _
	Public Property Nombre_Usu() As String
		Get
			Return Me._Nombre_Usu
		End Get
		Set
			If (String.Equals(Me._Nombre_Usu, value) = false) Then
				Me.OnNombre_UsuChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Usu = value
				Me.SendPropertyChanged("Nombre_Usu")
				Me.OnNombre_UsuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Apellido_Usu", DbType:="VarChar(50)")>  _
	Public Property Apellido_Usu() As String
		Get
			Return Me._Apellido_Usu
		End Get
		Set
			If (String.Equals(Me._Apellido_Usu, value) = false) Then
				Me.OnApellido_UsuChanging(value)
				Me.SendPropertyChanging
				Me._Apellido_Usu = value
				Me.SendPropertyChanged("Apellido_Usu")
				Me.OnApellido_UsuChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Provincia", DbType:="Int")>  _
	Public Property Id_Provincia() As System.Nullable(Of Integer)
		Get
			Return Me._Id_Provincia
		End Get
		Set
			If (Me._Id_Provincia.Equals(value) = false) Then
				If Me._Provincia.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnId_ProvinciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Provincia = value
				Me.SendPropertyChanged("Id_Provincia")
				Me.OnId_ProvinciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Domicilio", DbType:="VarChar(50)")>  _
	Public Property Domicilio() As String
		Get
			Return Me._Domicilio
		End Get
		Set
			If (String.Equals(Me._Domicilio, value) = false) Then
				Me.OnDomicilioChanging(value)
				Me.SendPropertyChanging
				Me._Domicilio = value
				Me.SendPropertyChanged("Domicilio")
				Me.OnDomicilioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Barrio", DbType:="VarChar(50)")>  _
	Public Property Barrio() As String
		Get
			Return Me._Barrio
		End Get
		Set
			If (String.Equals(Me._Barrio, value) = false) Then
				Me.OnBarrioChanging(value)
				Me.SendPropertyChanging
				Me._Barrio = value
				Me.SendPropertyChanged("Barrio")
				Me.OnBarrioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Teléfono_Fijo", DbType:="VarChar(50)")>  _
	Public Property Teléfono_Fijo() As String
		Get
			Return Me._Teléfono_Fijo
		End Get
		Set
			If (String.Equals(Me._Teléfono_Fijo, value) = false) Then
				Me.OnTeléfono_FijoChanging(value)
				Me.SendPropertyChanging
				Me._Teléfono_Fijo = value
				Me.SendPropertyChanged("Teléfono_Fijo")
				Me.OnTeléfono_FijoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Teléfono_Celular", DbType:="VarChar(50)")>  _
	Public Property Teléfono_Celular() As String
		Get
			Return Me._Teléfono_Celular
		End Get
		Set
			If (String.Equals(Me._Teléfono_Celular, value) = false) Then
				Me.OnTeléfono_CelularChanging(value)
				Me.SendPropertyChanging
				Me._Teléfono_Celular = value
				Me.SendPropertyChanged("Teléfono_Celular")
				Me.OnTeléfono_CelularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_E_mail", DbType:="VarChar(50)")>  _
	Public Property E_mail() As String
		Get
			Return Me._E_mail
		End Get
		Set
			If (String.Equals(Me._E_mail, value) = false) Then
				Me.OnE_mailChanging(value)
				Me.SendPropertyChanging
				Me._E_mail = value
				Me.SendPropertyChanged("E_mail")
				Me.OnE_mailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre_Usuario", DbType:="VarChar(50)")>  _
	Public Property Nombre_Usuario() As String
		Get
			Return Me._Nombre_Usuario
		End Get
		Set
			If (String.Equals(Me._Nombre_Usuario, value) = false) Then
				Me.OnNombre_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Usuario = value
				Me.SendPropertyChanged("Nombre_Usuario")
				Me.OnNombre_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contraseña", DbType:="VarChar(50)")>  _
	Public Property Contraseña() As String
		Get
			Return Me._Contraseña
		End Get
		Set
			If (String.Equals(Me._Contraseña, value) = false) Then
				Me.OnContraseñaChanging(value)
				Me.SendPropertyChanging
				Me._Contraseña = value
				Me.SendPropertyChanged("Contraseña")
				Me.OnContraseñaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id_Perfil_Usuario", DbType:="Int NOT NULL")>  _
	Public Property Id_Perfil_Usuario() As Integer
		Get
			Return Me._Id_Perfil_Usuario
		End Get
		Set
			If ((Me._Id_Perfil_Usuario = value)  _
						= false) Then
				If Me._Perfil_Usuario.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnId_Perfil_UsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Id_Perfil_Usuario = value
				Me.SendPropertyChanged("Id_Perfil_Usuario")
				Me.OnId_Perfil_UsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Perfil_Usuario_Usuario", Storage:="_Perfil_Usuario", ThisKey:="Id_Perfil_Usuario", OtherKey:="Id_Perfil_Usuario", IsForeignKey:=true)>  _
	Public Property Perfil_Usuario() As Perfil_Usuario
		Get
			Return Me._Perfil_Usuario.Entity
		End Get
		Set
			Dim previousValue As Perfil_Usuario = Me._Perfil_Usuario.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Perfil_Usuario.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Perfil_Usuario.Entity = Nothing
					previousValue.Usuario.Remove(Me)
				End If
				Me._Perfil_Usuario.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Usuario.Add(Me)
					Me._Id_Perfil_Usuario = value.Id_Perfil_Usuario
				Else
					Me._Id_Perfil_Usuario = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Perfil_Usuario")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Provincia_Usuario", Storage:="_Provincia", ThisKey:="Id_Provincia", OtherKey:="Id_Provincia", IsForeignKey:=true)>  _
	Public Property Provincia() As Provincia
		Get
			Return Me._Provincia.Entity
		End Get
		Set
			Dim previousValue As Provincia = Me._Provincia.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Provincia.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Provincia.Entity = Nothing
					previousValue.Usuario.Remove(Me)
				End If
				Me._Provincia.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Usuario.Add(Me)
					Me._Id_Provincia = value.Id_Provincia
				Else
					Me._Id_Provincia = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Provincia")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
